package com.urdomain.lecture.ch03;

public class Operator {

	public static void main(String[] args) {
			
//		연산의 방향
//		<-- : right to left : 증감 , 부호 , 비트 , 논리 ,대입
//		--> : left to right : 산술 , 쉬프트 ,비교 ,논리 조건
//		
//		산의 우선순위
//		
//		증감
//		산술
//		산술
//		쉬프트
//		비교
//		비교
//		논리
//		논리
//		논리
//		논리
//		조건
//		대입
//		
//		()로 적절히 우선순의를 잡아서 사용하는것이 중요 ******
		
//		항 = 피연산자 = 데이터
//		단항연산자 (피연산자가 한개인것)
//			부호연산자(+,-)
//				+ : 현행부호 유지
//				- : 현행부호 변경 
				
//			
//			증감연산자 (++ , --) ***
//			
//			논리부정연산자(!) ******
//			
//			비트반전연산자(~)
//		이항연산자 (피연산자가 두개인것)
//			산술연산자(+,-,*,/,%) *******
//				int보다 작은타입들은 int로 형변환되여 연산됨
//				연산중 큰타입이있으면 작은타입은 큰타입으로 변환되어 연산됨
//				오버플로우: 연산후 산출값이 산출타입에서 충분히 저장가능한지 검토가필요하며
//				그범위를 벗어나면 가장 근사치값이나 쓰레기값이 반환되어 연산이 부정확해
//			 
//			문자연결연산자(+) *******
//			 
//			비교연산자 *******
//				동등비교 (==,!=)
//				크기비교 (<,>,<=,>=)
//				String 	비교
//			논리연산자 (&&, ||, &,|,^,!)*****
//			
//			비트연산자(<<,>>,>>>)
//			
//			대입연산자
//				단순대입(=)*********
//				복합대입연산자(+=,-=,*=,/=,%=,등) **
//				
//	
//	
//	
////		
////		삼한연산(피연산자가 세개인것)
//				(?:) **
	}

}
